</$objtype/mkfile
#
#		programs
#
TARG=\
	keyfs\
	authsrv\
	guard.srv\
	netkey\
	passwd\
	cron\
	changeuser\
	printnetkey\
	wrkey\
	convkeys\
	warning\
	convkeys2\
	login\
	uniq\
	iam\

DIRS=lib\
	factotum\
	secstore\

HFILES=/sys/include/auth.h /sys/include/authsrv.h authcmdlib.h

LIB=lib.$O.a /$objtype/lib/libc.a
BIN=/$objtype/bin/auth
CLIB=`{ls lib/*.c}

</sys/src/cmd/mkmany

all:V:	$DIRS

$DIRS:V:
	for (i in $DIRS) @{
		echo mk $i
		cd $i
		mk all
	}

all:V:	$DIRS

$DIRS:V:
	for (i in $DIRS) @{
		echo mk $i
		cd $i
		mk all
	}

install:V:	installdirs $BIN/status $BIN/enable $BIN/disable


nuke:V:	nukedirs

installdirs:V:
	for (i in $DIRS) @{
		echo mk $i
		cd $i
		mk install
	}

clean:V:
	for (i in $DIRS) @{
		echo clean $i
		cd $i
		mk clean
	}
	rm -f [$OS].* *.[$OS]

nukedirs:V:
	for (i in $DIRS) @{
		echo nuke $i
		cd $i
		mk nuke
	}

$O.authsrv: lib.$O.a authsrv.$O secureidcheck.$O
	$LD -o $O.authsrv $prereq

$O.guard.srv: lib.$O.a guard.srv.$O secureidcheck.$O
	$LD -o $O.guard.srv $prereq

$BIN/netkey:V:	$O.netkey
	cp $O.netkey /$objtype/bin/netkey

$BIN/passwd:V:	$O.passwd
	cp $O.passwd /$objtype/bin/passwd

$BIN/status:V:
	cp status $target

$BIN/enable:V:
	cp enable $target

$BIN/disable:V:
	cp disable $target

lib.$O.a:V:
	cd lib
	mk

clean:V:
	cd lib
	mk clean
	cd ..
	rm -f *.[$OS] *.[$OS].a y.tab.? y.debug y.output [$OS].* $TARG

nuke:V:
	cd lib
	mk nuke
	cd ..
	rm -f *.[$OS] *.[$OS].a y.tab.? y.debug y.output [$OS].$TARG $TARG
