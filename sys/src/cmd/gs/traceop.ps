%    Copyright (C) 1992, 1993, 1994 Aladdin Enterprises.  All rights reserved.
% 
% This file is part of Aladdin Ghostscript.
% 
% Aladdin Ghostscript is distributed with NO WARRANTY OF ANY KIND.  No author
% or distributor accepts any responsibility for the consequences of using it,
% or for whether it serves any particular purpose or works at all, unless he
% or she says so in writing.  Refer to the Aladdin Ghostscript Free Public
% License (the "License") for full details.
% 
% Every copy of Aladdin Ghostscript must include a copy of the License,
% normally in a plain ASCII text file named PUBLIC.  The License grants you
% the right to copy, modify and redistribute Aladdin Ghostscript, but only
% under certain conditions described in the License.  Among other things, the
% License requires that the copyright notice and this notice be preserved on
% all copies.

% Trace individual operators or procedures.
% <opref> is <opname> or <opname> <dict>
%    (dict defaults to dict where op is currently defined, if writable;
%    otherwise uses userdict)
% <opref> traceop prints vmem usage before;
% <opref> <numargs|preproc> prints arguments or runs proc before;
% <opref> <numargs|preproc> <numresults|postproc>
%    also prints results or runs proc after.
% If traceflush is true, flush the output after each printout.
/traceflush true def

currentpacking true setpacking
.currentglobal true .setglobal

% Define the default "before" action
/tracebefore { vmstatus 3 traceprint pop pop pop } def

% Define the default "after" action
/traceafter { } def

/traceprint
 { dup type /integertype eq
    { 1 sub -1 0 { ( ) print index ==only } for }
    { exec }
   ifelse
 } bind def
/traceend
 { traceflush { flush } if
 } bind def
/traceop
 { userdict begin
   dup type dup /nametype eq exch /dicttype eq or { { tracebefore } } if
   1 index type dup /nametype eq exch /dicttype eq or { { traceafter } } if
   /.tpost exch def /.tpre exch def
   dup type /dicttype ne
    { dup where not { userdict 1 index {} put userdict } if
    } if
   dup dup wcheck not
    { (Warning: substituting userdict for non-writable dictionary.\n) print
      pop userdict
    } if
   /.tddict exch def   /.tdict exch def   /.tname exch cvlit def
   [ .tname /=only cvx ( ) /print cvx
     /.tpre load /traceprint cvx /traceend cvx
     .tdict .tname get
     dup xcheck
      { dup type dup /arraytype eq exch /packedarraytype eq or
         { /exec cvx
	 } if
      } if
     /.tpost load /traceprint cvx (\n) /print cvx /traceend cvx
   ] cvx
   .tdict .tname get type /operatortype eq
    { .tname exch .makeoperator
    } if
   .tddict exch .tname exch put end
 } bind def
/tracebind /bind load def	% in case someone wants to put it back
/bind { } def		% disable

.setglobal
setpacking
