16L8=AM16L8=NS16L8 {
    array and/or {
	inputs {
	    complement+ external {
		2,	1,
		3,	18,
		4,	17,
		5,	16,
		6,	15,
		7,	14,
		8,	13,
		9,	11
	    }
	}
	outputs	{
	    external {
		119:1,
		19:7,
		118:1,
		18:7,
		117:1,
		17:7,
		116:1,
		16:7,
		115:1,
		15:7,
		114:1,
		14:7,
		113:1,
		13:7,
		112:1,
		12:7
		}
	    }
	}
type	"iiiiiiiiig i55555555v"
}
10L8 {
    array and/or {
	inputs {
	    complement+ external {
		2,	1,
		3,	4,
		5,	6,
		7,	8,
		9,	11
	    }
	}
	outputs	{
	    external {
		19:2,
		18:2,
		17:2,
		16:2,
		15:2,
		14:2,
		13:2,
		12:2
		}
	    }
	}
type	"iiiiiiiiig i222222222v"
}
16R8=NS16R8=MM16R8=AM16R8 {
    array and/or {
	inputs {
	    complement+ external {
		2,	19,
		3,	18,
		4,	17,
		5,	16,
		6,	15,
		7,	14,
		8,	13,
		9,	12
	    }
	}
	outputs	{
	    external {
		19:8,
		18:8,
		17:8,
		16:8,
		15:8,
		14:8,
		13:8,
		12:8
		}
	    }
	}
type	"iiiiiiiiig i222222222v"
}
16R4=NS16R4=MM16R4 {
    array and/or {
	inputs {
	    complement+ external {
		2,	19,
		3,	18,
		4,	17,
		5,	16,
		6,	15,
		7,	14,
		8,	13,
		9,	12
	    }
	}
	outputs	{
	    external {
		119:1,
		19:7,
		118:1,
		18:7,
		17:8,
		16:8,
		15:8,
		14:8,
		113:1,
		13:7,
		112:1,
		12:7
		}
	    }
	}
type	"iiiiiiiiig i55555555v"
}
16R6=AM16R6=NS16R6 {
    array and/or {
	inputs {
	    complement+ external {
		2,	19,
		3,	18,
		4,	17,
		5,	16,
		6,	15,
		7,	14,
		8,	13,
		9,	12
	    }
	}
	outputs	{
	    external {
		119:1,
		19:7,
		18:8,
		17:8,
		16:8,
		15:8,
		14:8,
		13:8,
		112:1,
		12:7
		}
	    }
	}
type	"iiiiiiiiig i55555555v"
}
12H6	{
    array and/or {
	inputs {
	    complement+ external {
	    }
	}
	outputs	{
	    external {
		18:4,
		17:2,
		16:2,
		15:2,
		14:2,
		13:4,
		}
	    }
	}
type	"iiiiiiiiig ii555555iv"
}
NS22V10=AM22V10=22V10 {
    array and/or {
	inputs {
	    complement+ external {
		1,	23,
		2,	22,
		3,	21,
		4,	20,
		5,	19,
		6,	18,
		7,	17,
		8,	16,
		9,	15,
		10,	14,
		11,	13
	    }
	}
	outputs	{
	    external {
		25:1,		# asynchronous reset
		123:1,
		23:8,
		122:1,
		22:10,
		121:1,
		21:12,
		120:1,
		20:14,
		119:1,
		19:16,
		118:1,
		18:16,
		117:1,
		17:14,
		116:1,
		16:12,
		115:1,
		15:10,
		114:1,
		14:8,
		26=131		# synchronous preset
		}
	}
    }
    fuses	{
		223=5808,	# output polarity
		323=5809,	# output registered/combinatorial
		222=5810,
		322=5811,
		221=5812,
		321=5813,
		220=5814,
		320=5815,
		219=5816,
		319=5817,
		218=5818,
		318=5819,
		217=5820,
		317=5821,
		216=5822,
		316=5823,
		215=5824,
		315=5825,
		214=5826,
		314=5827
		}
type	"iiiiiiiiiiig i5555555555v"
}
20L10=NS20L10=AM20L10 {
    array and/or {
	inputs {
	    complement+ external {
		2,	1,
		3,	22,
		4,	21,
		5,	20,
		6,	19,
		7,	18,
		8,	17,
		9,	16,
		10,	15,
		11,	13
	    }
	}
	outputs	{
	    external {
		123:1,
		23:3,
		122:1,
		22:3,
		121:1,
		21:3,
		120:1,
		20:3,
		119:1,
		19:3,
		118:1,
		18:3,
		117:1,
		17:3,
		116:1,
		16:3,
		115:1,
		15:3,
		114:1,
		14:3
		}
	    }
	}
type	"iiiiiiiiiiig i3455555555v"
}
20X10 {
    array and/or {
	inputs {
	    complement+ external {
		2,	23,
		3,	22,
		4,	21,
		5,	20,
		6,	19,
		7,	18,
		8,	17,
		9,	16,
		10,	15,
		11,	14
	    }
	}
	outputs	{
	    external {
		23=0:2,
		73=2:2,
		22=8:2,
		72=10:2,
		21=16:2,
		71=18:2,
		20=24:2,
		70=26:2,
		19=32:2,
		69=34:2,
		18=40:2,
		68=42:2,
		17=48:2,
		67=50:2,
		16=56:2,
		66=58:2,
		15=64:2,
		65=66:2,
		14=72:2,
		64=74:2,
		}
	    }
	}
type	"iiiiiiiiiiig i3333333333v"
}
20X8 {
    array and/or {
	inputs {
	    complement+ external {
		2,	23,
		3,	22,
		4,	21,
		5,	20,
		6,	19,
		7,	18,
		8,	17,
		9,	16,
		10,	15,
		11,	14
	    }
	}
	outputs	{
	    external {
		123=0:1,
		23=1:3,
		22=8:2,
		72=10:2,
		21=16:2,
		71=18:2,
		20=24:2,
		70=26:2,
		19=32:2,
		69=34:2,
		18=40:2,
		68=42:2,
		17=48:2,
		67=50:2,
		16=56:2,
		66=58:2,
		15=64:2,
		65=66:2,
		114=72:1,
		14=73:3
		}
	    }
	}
type	"iiiiiiiiiiig i2222222222iv"
}
20X4 {
    array and/or {
	inputs {
	    complement+ external {
		2,	23,
		3,	22,
		4,	21,
		5,	20,
		6,	19,
		7,	18,
		8,	17,
		9,	16,
		10,	15,
		11,	14
	    }
	}
	outputs	{
	    external {
		123=0:1,
		23=1:3,
		122=8:1,
		22=9:3,
		121=16:1,
		21=17:3,
		20=24:2,
		70=26:2,
		19=32:2,
		69=34:2,
		18=40:2,
		68=42:2,
		17=48:2,
		67=50:2,
		116=56:1,
		16=57:3,
		115=64:1,
		15=65:3,
		114=72:1,
		14=73:3
		}
	    }
	}
type	"iiiiiiiiiiig i2222222222iv"
}
20L8=NS20L8=AM20L8 {
    array and/or {
	inputs {
	    complement+ external {
		2,	1,
		3,	23,
		4,	21,
		5,	20,
		6,	19,
		7,	18,
		8,	17,
		9,	16,
		10,	14,
		11,	13
	    }
	}
	outputs	{
	    external {
		122=0:1,
		22=1:7,
		121=8:1,
		21=9:7,
		120=16:1,
		20=17:7,
		119=24:1,
		19=25:7,
		118=32:1,
		18=33:7,
		117=40:1,
		17=41:7,
		116=48:1,
		16=49:7,
		115=56:1,
		15=57:7
		}
	    }
	}
type	"iiiiiiiiiiig ii55555555iv"
}
20R8 {
    array and/or {
	inputs {
	    complement+ external {
		2,	23,
		3,	22,
		4,	21,
		5,	20,
		6,	19,
		7,	18,
		8,	17,
		9,	16,
		10,	15,
		11,	14
	    }
	}
	outputs	{
	    external {
		22= 8:8,
		21=16:8,
		20=24:8,
		19=32:8,
		18=40:8,
		17=48:8,
		16=56:8,
		15=64:8
		}
	    }
	}
type	"iiiiiiiiiiig ii55555555iv"
}
20R6 {
    array and/or {
	inputs {
	    complement+ external {
		2,	23,
		3,	22,
		4,	21,
		5,	20,
		6,	19,
		7,	18,
		8,	17,
		9,	16,
		10,	15,
		11,	14
	    }
	}
	outputs	{
	    external {
		122=0:1,
		22=1:7,
		21=8:8,
		20=16:8,
		19=24:8,
		18=32:8,
		17=40:8,
		16=48:8,
		115=56:1,
		15=57:7
		}
	    }
	}
type	"iiiiiiiiiiig ii55555555iv"
}
20R4 {
    array and/or {
	inputs {
	    complement+ external {
		2,	23,
		3,	22,
		4,	21,
		5,	20,
		6,	19,
		7,	18,
		8,	17,
		9,	16,
		10,	15,
		11,	14
	    }
	}
	outputs	{
	    external {
		122=0:1,
		22=1:7,
		121=8:1,
		21=9:7,
		20=16:8,
		19=24:8,
		18=32:8,
		17=40:8,
		116=48:1,
		16=49:7,
		115=56:1,
		15=57:7
		}
	    }
	}
type	"iiiiiiiiiiig ii55555555iv"
}
16P8 {
    array and/or {
	inputs {
	    complement+ external {
		2,	1,
		3,	18,
		4,	17,
		5,	16,
		6,	15,
		7,	14,
		8,	13,
		9,	11
	    }
	}
	outputs	{
	    external {
		119:1,
		19:7,
		118:1,
		18:7,
		117:1,
		17:7,
		116:1,
		16:7,
		115:1,
		15:7,
		114:1,
		14:7,
		113:1,
		13:7,
		112:1,
		12:7,
		219:1,
		218:1,
		217:1,
		216:1,
		215:1,
		214:1,
		213:1,
		212:1
		}
	    }
	}
type	"iiiiiiiiig i55555555v"
}
16RP4 {
    array and/or {
	inputs {
	    complement+ external {
		2,	1,
		3,	18,
		4,	17,
		5,	16,
		6,	15,
		7,	14,
		8,	13,
		9,	11
	    }
	}
	outputs	{
	    external {
		119:1,
		19:7,
		118:1,
		18:7,
		17:8,
		16:8,
		15:8,
		14:8,
		113:1,
		13:7,
		112:1,
		12:7,
		219:1,
		218:1,
		217:1,
		216:1,
		215:1,
		214:1,
		213:1,
		212:1
		}
	    }
	}
type	"iiiiiiiiig i55555555v"
}
18P8 {
    array and/or {
	inputs {
	    complement+ external {
		2,
		1,
		3,	18,
		4,	17,
		5,	16,
		6,	15,
		7,	14,
		8,	13,
		9,	11,
			19,
			12
	    }
	}
	outputs	{
	    external {
		119:1,
		19:8,
		118:1,
		18:8,
		117:1,
		17:8,
		116:1,
		16:8,
		115:1,
		15:8,
		114:1,
		14:8,
		113:1,
		13:8,
		112:1,
		12:8,
		219:1,
		218:1,
		217:1,
		216:1,
		215:1,
		214:1,
		213:1,
		212:1
		}
	    }
	}
type	"iiiiiiiiig i55555555v"
}
22P10 {
    array and/or {
	inputs {
	    complement+ external {
		2,
		1,
		3,	22,
		4,	21,
		5,	20,
		6,	19,
		7,	18,
		8,	17,
		9,	16,
		10,	15,
		11,	13,
			23,
			14
	    }
	}
	outputs	{
	    external {
		123:1,	23:8,
		122:1,	22:8,
		121:1,	21:8,
		120:1,	20:8,
		119:1,	19:8,
		118:1,	18:8,
		117:1,	17:8,
		116:1,	16:8,
		115:1,	15:8,
		114:1,	14:8,
				223:1,
				222:1,
				221:1,
				220:1,
				219:1,
				218:1,
				217:1,
				216:1,
				215:1,
				214:1
		}
	    }
	}
type	"iiiiiiiiiiig i555555555iv"
}
20RA10 {
    pins 24
    array and/or {
	inputs {
		complement+ external {
			2,	23,
			3,	22,
			4,	21,
			5,	20,
			6,	19,
			7,	18,
			8,	17,
			9,	16,
			10,	15,
			11,	14
		}
	}
	outputs {
		external {
# +100 = enable (as usual)
# +200 = clock
# +300 = reset
# +400 = set
# +500 = polarity
			123, 223, 323, 423, 23:4,
			122, 222, 322, 422, 22:4,
			121, 221, 321, 421, 21:4,
			120, 220, 320, 420, 20:4,
			119, 219, 319, 419, 19:4,
			118, 218, 318, 418, 18:4,
			117, 217, 317, 417, 17:4,
			116, 216, 316, 416, 16:4,
			115, 215, 315, 415, 15:4,
			114, 214, 314, 414, 14:4
		}
	}
    }
    fuses {
		523=3200,
		522,
		521,
		520,
		519,
		518,
		517,
		516,
		515,
		514
    }
    type "iiiiiiiiiiig i4444444444v"
}			
AM23S8=23S8 {
    array and/or {
	inputs {
	    complement+ external {
#			left	right	cell outputs & buried registers
			2,	19,
			3,	18,
			4,		918,
			5,	17,
			6,		917,
				16,	916,
					915,
				15,
			7,		914,
			8,	14,
			9,		913,
			11,	13,
				12
	    }
	}
	outputs	{
	    external {
	# horizontal or lines
		119:1,
		19:8,
		118:1,
		18:10,
		918:6,
		117:1,
		17:8,
		917:8,
		116:1,
		16:12,
		916:10,
		915:10,
		115:1,
		15:12,
		914:8,
		114:1,
		14:8,
		913:6,
		113:1,
		13:10,
		112:1,
		12:8,
		121=133,	# observability fusess
		122=134,	# synchronous preset
		123=135,	# asynchronous reset
		519=136,	# polarity for output enable of pin 19
		219=137,	# output polarity
		319=138,	# output registered/combinatorial
		419=139,	# feedback registered combinatorial
		518=140,	# enable polarity
		218=141,	# output polarity
		318=142,	# output type
		418=143,	# feedback type
		517=144,	# enable polarity
		217=145,	# output polarity
		516=146,
		216=147,
		515=148,
		215=149,
		514=150,
		214=151,
		513=152,
		213=153,
		313=154,
		413=155,
		512=156,
		212=157,
		312=158,
		412=159
		}
	    }
	}
type	"iiiiiiiiigi55555555v"
}
AM24R10=24R10 {
    array and/or {
	inputs {
	    complement+ external {
		2,	28,
		3,	27,
		4,	26,
		5,	25,
		6,	24,
		8,	23,
		9,	22,
		10,	20,
		11,	19,
		12,	18,
		13,	17,
		14,	16
	    }
	}
	outputs	{
	    external {
		26:8,
		25:8,
		24:8,
		23:8,
		22:8,
		20:8,
		19:8,
		18:8,
		17:8,
		16:8
		}
	    }
	}
type	"iiiiiiviiiiiii i33333g33333ii"
}
CY7C332=7C332 {
    array and/or {
	inputs {
	    complement+ external {
		1,
		2,	28,
		3,	27,
		4,	26,
		5,	25,
		6,	24,
		7,	23,
		9,	20,
		10,	19,
		11,	18,
		12,	17,
		13,	16,
		14,	15
	    }
	}
	outputs	{
	    external {
		128,
		228,
		28:9,
		127,
		227,
		27:19,
		126,
		226,
		26:11,
		125,
		225,
		25:17,
		124,
		224,
		24:13,
		123,
		223,
		23:15,
		120,
		220,
		20:15,
		119,
		219,
		19:13,
		118,
		218,
		18:17,
		117,
		217,
		17:11,
		116,
		216,
		16:19,
		115,
		215,
		15:9
		}
	    }
	}
	fuses	{
	# input macrocells
		301=9600,	401, 		601,
		302=9603,	402,		602,
		303=9606,	403,	503,	603,
		304=9610,	404,	504,	604,
		305=9614,	405,	505,	605,
		306=9618,	406,	506,	606,
		307=9622,	407,	507,	607,
		309=9626,	409,	509,	609,
		310=9630,	410,	510,	610,
		311=9634,	411,	511,	611,
		312=9638,	412,	512,	612,
		313=9642,	413,	513,	613,
		314=9646,	414,	514,	614,
	# output macrocells
		728=9650,	828,	928,	1028,	1128,
		727=9655,	827,	927,	1027,	1127,
		726=9660,	826,	926,	1026,	1126,
		725=9665,	825,	925,	1025,	1125,
		724=9670,	824,	924,	1024,	1124,
		723=9675,	823,	923,	1023,	1123,
		720=9680,	820,	920,	1020,	1122,
		719=9685,	819,	919,	1019,	1121,
		718=9690,	818,	918,	1018,	1120,
		717=9695,	817,	917,	1017,	1119,
		716=9700,	816,	916,	1016,	1118,
		715=9705,	815,	915,	1015,	1117
	}
type	"iiiiiiigiiiiii 555555gv555555"
}	
AM26V12=26V12 {
    array and/or {
	inputs {
	    complement+ external {
		1,	28,
		2,	27,
		3,	26,
		4,	25,
		5,	24,
		6,	23,
		8,	22,
		9,	20,
		10,	19,
		11,	18,
		12,	17,
		13,	16,
		14,	15
	    }
	}
	outputs	{
	    external {
		29,		# asynch reset
		127,
		27:8,
		126,
		26:8,
		125,
		25:10,
		124,
		24:12,
		123,
		23:14,
		122,
		22:16,
		120,
		20:16,
		119,
		19:14,
		118,
		18:12,
		117,
		17:10,
		116,
		16:8,
		115,
		15:8,
		30		# synch preset
		}
	    }
	}
	fuses	{
		227=7800,
		327=7812,
		427=7824,
		527=7836,
		226=7801,
		326=7813,
		426=7825,
		526=7837,
		225=7802,
		325=7814,
		425=7826,
		525=7838,
		224=7803,
		324=7815,
		424=7827,
		524=7839,
		223=7804,
		323=7816,
		423=7828,
		523=7840,
		222=7805,
		322=7817,
		422=7829,
		522=7841,
		220=7806,
		320=7818,
		420=7830,
		520=7842,
		219=7807,
		319=7819,
		419=7831,
		519=7843,
		218=7808,
		318=7820,
		418=7832,
		518=7844,
		217=7809,
		317=7821,
		417=7833,
		517=7845,
		216=7810,
		316=7822,
		416=7834,
		516=7846,
		215=7811,
		315=7823,
		415=7835,
		515=7847
	}
type	"iiiiiiviiiiiii 555555g555555i"
}
20V8=AM20V8 {
    array and/or {
	inputs {
	    complement+ external {
		2,	1,
		3,	22,
		4,	21,
		5,	20,
		6,	19,
		7,	18,
		8,	17,
		9,	16,
		10,	15,
		11,	14
	    }
	}
	outputs	{
	    external {
		22:8,
		21:8,
		20:8,
		19:8,
		18:8,
		17:8,
		16:8,
		15:8,
		14:8
	    }
	}
    }
    fuses	{
		25=2704,	# SG0
		26=2705,	# SG1
		222=2560,	# SL1 (polarity fuses)
		322=2632,	# SL0 (configuration fuses)
		221=2561,	# SL1
		321=2633,	# SL0
		220=2562,	# SL1
		320=2634,	# SL0
		219=2563,	# SL1
		319=2635,	# SL0
		218=2564,	# SL1
		318=2636,	# SL0
		217=2565,	# SL1
		317=2637,	# SL0
		216=2566,	# SL1
		316=2638,	# SL0
		215=2567,	# SL1
		315=2639,	# SL0
		214=2568,	# SL1
		314=2640	# SL0
    }
    type	"iiiiiiiiiiig i345555555iv"
}
32VX10=AM32VX10 {
    array and/or {
	inputs {
	    complement+ external {
#		in	reg	i/o
		1,	23,	423,
		2,	22,	422,
		4,	21,	421,
		4,	20,	420,
		4,	19,	419,
		6,	18,	418,
		7,	17,	417,
		8,	16,	416,
		9,	15,	415,
		10,	14,	414,
		11,	13,	413
	    }
	}
	outputs	{
	    external {
		25,	# sync reset
		123,
		223,
		23:8,
		122,
		222,
		22:8,
		121,
		221,
		21:8,
		120,
		220,
		20:8,
		119,
		219,
		19:8,
		118,
		218,
		18:8,
		117,
		217,
		17:8,
		116,
		216,
		16:8,
		115,
		215,
		15:8,
		114,
		214,
		14:8,
		26	# async preset
		}
	}
    }
    fuses	{
		126=9727,
		323=9728,
		322=9729,
		321=9730,
		320=9731,
		319=9732,
		318=9733,
		317=9734,
		316=9735,
		315=9736,
		314=9737
	}
type	"iiiiiiiiiiig i5555555555v"
}
22IP6=AM22IP6 {
    array and/or {
	inputs {
	    complement+ external {
		1,	24,
		2,	23,
		3,	22,
		4,	21,
		5,	20,
		7,	19,
		8,	17,
		9,	16,
		10,	15,
		11,	14,
		12,	13
	    }
	}
	outputs	{
	    external {
		121,	# 100 = oe
		221,	# 200 = async preset
		21:9,
		321,	# 300 = async clear
		120,
		220,
		20:9,
		320,
		119,
		219,
		19:9,
		319,
		117,
		217,
		17:9,
		317,
		116,
		216,
		16:9,
		316,
		115,
		215,
		15:9,
		315
	    }
	}
    }
    fuses	{
		621=3276,	# polarity of clock (t1)
		721,		# " (t2)
		620,
		720,
		619,
		719,
		617,
		717,
		616,
		716,
		615,
		715,
		821=3288,	# comb/registered
		820,
		819,
		817,
		816,
		815
    }
type	"iiiiiviiiiii ii555g555iii"
}
AM29MA16=29MA16 { # DIP package
    array and/or {
	inputs {
	    complement+ external {
#		pin	hidden register
		2,
		3,	53,
		4,	54,
			55,
			56,
			57,
			58,
		9,	59,
		10,	60,
		11,
		13,		# I1
		14,		# I2
		15,	65,
		16,	66,
			67,
			68,
			69,
			70,
		21,	71,
		22,	72,
		23
	    }
	}
	outputs	{
	    external {
		3:8,
		25,		# preset? term
		22:8,
		4:8,
		21:8,
		5:12,
		20:12,
		6:16,
		19:16,
		7:16,
		18:16,
		8:12,
		17:12,
		9:8,
		16:8,
		10:8,
		26,		# preload product term
		15:8
	    }
	}
    }
# special fuses:
#	100+ = S0 (1=active low, 0=active high)
#	200+ = S1 (1=Combinatorial/0=Registered)
#	300+ = S2 (Storage element, 1=register, 0=latch)
#	400+ = S3 (1=Output cell,0=input cell)
#	500+ = S4 (1=clock pin, 2=product term)
#	600+ = S5 (1=low enable, 0=high enable)
#	700+ = S6 (1=controlled tristate enable,0=wired) [see S7]
#	800+ = S7 (Enable/Disable [need S6])
#	900+ = S8 (1=Register/latch, 0=I/O [feedback])
	fuses {
		103=10324,
		203=10325,
		303=10326,
		403=10327,
		503=10328,
		603=10329,
		703=10330,
		803=10331,
		122=10332,
		222=10333,
		322=10334,
		422=10335,
		522=10336,
		622=10337,
		722=10338,
		822=10339,
		104=10340,
		204=10341,
		304=10342,
		404=10343,
		504=10344,
		604=10345,
		704=10346,
		804=10347,
		121=10348,
		221=10349,
		321=10350,
		421=10351,
		521=10352,
		621=10353,
		721=10354,
		821=10355,
		105=10356,
		205=10357,
		305=10358,
		405=10359,
		505=10360,
		605=10361,
		705=10362,
		805=10363,
		905=10364,
		120=10365,
		220=10366,
		320=10367,
		420=10368,
		520=10369,
		620=10370,
		720=10371,
		820=10372,
		920=10373,
		106=10374,
		206=10375,
		306=10376,
		406=10377,
		506=10378,
		606=10379,
		706=10380,
		806=10381,
		906=10382,
		119=10383,
		219=10384,
		319=10385,
		419=10386,
		519=10387,
		619=10388,
		719=10389,
		819=10390,
		919=10391,
		107=10392,
		207=10393,
		307=10394,
		407=10395,
		507=10396,
		607=10397,
		707=10398,
		807=10399,
		907=10400,
		118=10401,
		218=10402,
		318=10403,
		418=10404,
		518=10405,
		618=10406,
		718=10407,
		818=10408,
		918=10409,
		108=10410,
		208=10411,
		308=10412,
		408=10413,
		508=10414,
		608=10415,
		708=10416,
		808=10417,
		908=10418,
		117=10419,
		217=10420,
		317=10421,
		417=10422,
		517=10423,
		617=10424,
		717=10425,
		817=10426,
		917=10427,
		109=10428,
		209=10429,
		309=10430,
		409=10431,
		509=10432,
		609=10433,
		709=10434,
		809=10435,
		116=10436,
		216=10437,
		316=10438,
		416=10439,
		516=10440,
		616=10441,
		716=10442,
		816=10443,
		110=10444,
		210=10445,
		310=10446,
		410=10447,
		510=10448,
		610=10449,
		710=10450,
		810=10451,
		115=10452,
		215=10453,
		315=10454,
		415=10455,
		515=10456,
		615=10457,
		715=10458,
		815=10459
	}
type	"ii4444444ig ii44444444iv"
}
PLS601 {
    pins 68
    array and/or {
	inputs {
	    complement+ external {
# ordinary inputs
		52, 53, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 68, 1,
		2, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 19,
# bidirectional inputs
		35, 34, 32, 31, 30, 28, 27, 25, 24, 23, 22, 21,
		}
# xor feedback
	    internal {
		70, 71, 72, 73,
# feedback nand terms
		200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 
		210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 
		220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 
		230, 231, 232, 233, 234, 235, 236, 237, 238,
# more xors
		74, 75, 76, 77,
# and more nands
		239, 
		240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 
		250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 
		260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 
		270, 271, 272, 273, 274, 275, 276, 277
	    }
	}
	outputs {
	    internal {
# xor pins (pin,pin+10)
		70, 80, 71, 81, 72, 82, 73, 83,
# feedback nand terms
		200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 
		210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 
		220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 
		230, 231, 232, 233, 234, 235, 236, 237, 238,
# bidirectional outputs and enables
		21, 121, 22, 122, 23, 123, 24, 124,
		25, 125, 27, 127, 28, 128, 30, 130,
		31, 131, 32, 132, 34, 134, 35, 135,
# ordinary outputs
		36, 136, 38, 138, 39, 139, 40, 140,
		41, 141, 42, 142, 44, 144, 45, 145,
		47, 147, 48, 148, 49, 149, 51, 151,
# back to the nand feedback...
		239, 
		240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 
		250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 
		260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
		270, 271, 272, 273, 274, 275, 276, 277,
# and finish with xor feedback
		74, 84, 75, 85, 76, 86, 77, 87
		}
	    }
	}
	type "iiviiiiig iigiiigiii v44444g44g 444g442v22 222g22g222 g2iiviiiii giigiiigi"
}
7C361=CY7C361 {
    pins 28
    array and/or {
	inputs {
	    external {
		3,
		5,
		6,
		9,
		10,
		11,
		12,
		13,
		1,
		2,
		14,
		15
	    }
# hidden registers (global, by 32)
	    internal {
		35,
		39,
		43,
		47,
		51,
		55,
		59,
		63,
# hidden registers (by 16)
		[34,50],
		[38,54],
		[42,58],
		[46,62],
# by 8
		[32,40,48,56],
		[33,41,49,57],
		[36,44,52,60],
		[37,45,53,61]
		}
	    }
	outputs {
# or plane of buried register macrocells
	    internal {
		64,	# global reset
		264,	# nand
# node 32
		65,	# local reset
		265,	# nand
		32,
		232,
		33,
		233,
		34,
		234,
		35,
		235,
# node 36
		66,
		266,
		36,
		236,
# nodes 37-39
		37,
		237,
		38,
		238,
		39,
		239,
# node 40
		67,
		267,
		40,
		240,
		41,
		241,
		42,
		242,
		43,
		243,
# node 44
		68,
		268,
		44,
		244,
		45,
		245,
		46,
		246,
		47,
		247,
# node 48
		69,
		269,
		48,
		248,
		49,
		249,
		50,
		250,
		51,
		251,
# node 52
		70,
		270,
		52,
		252,
		53,
		253,
		54,
		254,
		55,
		255,
# node 56
		71,
		271,
		56,
		256,
		57,
		257,
		58,
		258,
		59,
		259,
# node 60
		72,
		272,
		60,
		260,
		61,
		261,
		62,
		262,
		63,
		263
		}
	    }
	}
fuses	{
# bidirectional pins
	319=5453, 419,	519,
	320,	420,	520,
	324,	424,	524,
	325,	425,	525,
# output macro cells
	332=5288, 432,	532,
	333,	433,	533,
	334,	434,	534,
	335,	435,	535,
	336,	436,	536,
	337,	437,	537,
	338,	438,	538,
	339,	439,	539,
	340,	440,	540,
	341,	441,	541,
	342,	442,	542,
	343,	443,	543,
	344,	444,	544,
	345,	445,	545,
	346,	446,	546,
	347,	447,	547,
	348,	448,	548,
	349,	449,	549,
	350,	450,	550,
	351,	451,	551,
	352,	452,	552,
	353,	453,	553,
	354,	454,	554,
	355,	455,	555,
	356,	456,	556,
	357,	457,	557,
	358,	458,	558,
	359,	459,	559,
	360,	460,	560,
	361,	461,	561,
	362,	462,	562,
	363,	463,	563,
# input macro cells
	303=5433, 403,
	305,	405,
	306,	406,
	309,	409,
	310,	410,
	311,	411,
	312,	412,
	313,	413,
# input clock pin
	74=5432
	}
# second, output or plane
    array or_plane {
	offset 4592
	inputs {
	    internal  {
		32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
		48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
		73 # special ground node
		}
	}
	outputs {
	    external { 25, 24, 20, 19, 28, 27, 26, 18, 17, 16, 15,
			115, 14, 114, 2, 102, 1, 101, 31, 30, 29
		}
	}
    }
type	"44iiii??iiiii4433344???44333"
}
PLS501 {
    pins 52
    array and/or {
	inputs {
	    complement+ external {
# ordinary inputs
		41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52,
		1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14,
# bidirectional inputs
		37, 38, 39, 40, 15, 16, 17, 18		
		}
	    internal {
# feedback nand terms
		200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 
		210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 
		220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 
		230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 
		240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 
		250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 
		260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 
		270, 271
		}
	} # end inputs
	outputs {
	    external {
# bi pins (and their enables)
		37, 38, 39, 40,
		15, 115, 16, 116, 17, 117, 18, 118,
# xor pins (pin,pin+50) and enables (note they're bused)
		28, 78, 30, 80, [128,130],
		32, 82, 35, 85, [132,135],
		29, 79, 31, 81, [129,131],
		33, 83, 36, 86, [133,136],
# ordinary outputs
		19, 22, [119,122],
		21, 23, [121,123],
		24, 26, [124,126],
		25, 27, [125,127]
	    }
	    internal {
# feedback nand terms
		200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 
		210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 
		220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 
		230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 
		240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 
		250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 
		260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
		270, 271
	    }
	} # end outputs
    } # end and/or array
    fuses {
		137=15776,
		138=15777,
		139=15778,
		140=15779
    }
    type "iiiiiiivii iiii44442g 2222222222 222g224444 iiiiiviiii ii"
}
M110 {
    array and/or0 {
	inputs {
	    complement+ internal {
		100, 101, 102, 103, 104, 105, 106, 107, 108, 109,
		110, 111, 112, 113, 114, 115, 116, 117, 118, 119,
		120, 121
	    }
	}
	outputs	{
	    external {
		97:1, 96:1,	# enab0, enab1 low half
		98:1,		# asyn reset
		2:4, 3:4, 4:4, 5:4,
		6:4, 7:4, 8:4, 9:4,
		14:4, 15:4, 16:4, 17:4,
		18:4, 19:4, 20:4, 21:4,
		99:1,		# asyn preset
		95:1, 94:1	# enab0, enab1 high half
	    }
	}
    }
    array and/or1 {
	offset 3080
	inputs {
	    complement+ internal {
		200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
		210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
		220, 221
	    }
	}
	outputs	{
	    external {
		91:1, 90:1,	# enab0, enab1 low half
		92:1,		# asyn reset
		24:4, 25:4, 26:4, 27:4,
		28:4, 29:4, 30:4, 31:4,
		36:4, 37:4, 38:4, 39:4,
		40:4, 41:4, 42:4, 43:4,
		93:1,		# asyn preset
		89:1, 88:1	# enab0, enab1 high half
	    }
	}
    }
	# output macrocells
    fuses {
		1002=6160, 2002, 3002, 4002, 5002, 6002, 7002, 8002,
		1003, 2003, 3003, 4003, 5003, 6003, 7003, 8003,
		1004, 2004, 3004, 4004, 5004, 6004, 7004, 8004,
		1005, 2005, 3005, 4005, 5005, 6005, 7005, 8005,
		1006, 2006, 3006, 4006, 5006, 6006, 7006, 8006,
		1007, 2007, 3007, 4007, 5007, 6007, 7007, 8007,
		1008, 2008, 3008, 4008, 5008, 6008, 7008, 8008,
		1009, 2009, 3009, 4009, 5009, 6009, 7009, 8009,

		1014, 2014, 3014, 4014, 5014, 6014, 7014, 8014,
		1015, 2015, 3015, 4015, 5015, 6015, 7015, 8015,
		1016, 2016, 3016, 4016, 5016, 6016, 7016, 8016,
		1017, 2017, 3017, 4017, 5017, 6017, 7017, 8017,
		1018, 2018, 3018, 4018, 5018, 6018, 7018, 8018,
		1019, 2019, 3019, 4019, 5019, 6019, 7019, 8019,
		1020, 2020, 3020, 4020, 5020, 6020, 7020, 8020,
		1021, 2021, 3021, 4021, 5021, 6021, 7021, 8021,

		1024, 2024, 3024, 4024, 5024, 6024, 7024, 8024,
		1025, 2025, 3025, 4025, 5025, 6025, 7025, 8025,
		1026, 2026, 3026, 4026, 5026, 6026, 7026, 8026,
		1027, 2027, 3027, 4027, 5027, 6027, 7027, 8027,
		1028, 2028, 3028, 4028, 5028, 6028, 7028, 8028,
		1029, 2029, 3029, 4029, 5029, 6029, 7029, 8029,
		1030, 2030, 3030, 4030, 5030, 6030, 7030, 8030,
		1031, 2031, 3031, 4031, 5031, 6031, 7031, 8031,

		1036, 2036, 3036, 4036, 5036, 6036, 7036, 8036,
		1037, 2037, 3037, 4037, 5037, 6037, 7037, 8037,
		1038, 2038, 3038, 4038, 5038, 6038, 7038, 8038,
		1039, 2039, 3039, 4039, 5039, 6039, 7039, 8039,
		1040, 2040, 3040, 4040, 5040, 6040, 7040, 8040,
		1041, 2041, 3041, 4041, 5041, 6041, 7041, 8041,
		1042, 2042, 3042, 4042, 5042, 6042, 7042, 8042,
		1043, 2043, 3043, 4043, 5043, 6043, 7043, 8043,

	# switching matrix a
		1100, 2100,  1101, 2101,  1102, 2102,  1103, 2103,
		1104, 2104,  1105, 2105,  1106, 2106,  1107, 2107,

		1118, 2118, 3118,  1119, 2119, 3119,

		1108, 2108,  1109, 2109,  1110, 2110,  1111, 2111,
		1112, 2112,  1113, 2113,  1114, 2114,  1115, 2115,

		1120, 2120, 3120,  1121, 2121, 3121,

	# switching matrix b
		1200, 2200,  1201, 2201,  1202, 2202,  1203, 2203,
		1204, 2204,  1205, 2205,  1206, 2206,  1207, 2207,

		1218, 2218, 3218,  1219, 2219, 3219,

		1208, 2208,  1209, 2209,  1210, 2210,  1211, 2211,
		1212, 2212,  1213, 2213,  1214, 2214,  1215, 2215,

		1220, 2220, 3220,  1221, 2221, 3221
	}
}

M210 {
    array and/or0 {
	offset 88
	inputs {
	    complement+ internal {
		100, 101, 102, 103, 104, 105, 106, 107, 108, 109,
		110, 111, 112, 113, 114, 115, 116, 117, 118, 119,
		120, 121
	    }
	}
	outputs	{
	    external {
		97:1, 96:1,	# enab0, enab1
		2:4, 902:4, 3:4, 903:4, 4:4, 904:4, 5:4, 905:4,
		6:4, 906:4, 7:4, 907:4, 8:4, 908:4, 9:4, 909:4,
		98:1,		# asyn reset
		99:1,		# asyn preset
	    }
	}
    }
    array and/or1 {
	offset 3296
	inputs {
	    complement+ internal {
		200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
		210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
		220, 221
	    }
	}
	outputs	{
	    external {
		91:1, 90:1,	# enab0, enab1
		21:4, 921:4, 20:4, 920:4, 19:4, 919:4, 18:4, 918:4,
		17:4, 917:4, 16:4, 916:4, 15:4, 915:4, 14:4, 914:4,
		92:1,		# asyn reset
		93:1,		# asyn preset
	    }
	}
    }
    array and/or2 {
	offset 6504
	inputs {
	    complement+ internal {
		300, 301, 302, 303, 304, 305, 306, 307, 308, 309,
		310, 311, 312, 313, 314, 315, 316, 317, 318, 319,
		320, 321
	    }
	}
	outputs	{
	    external {
		85:1, 84:1,	# enab0, enab1
		24:4, 924:4, 25:4, 925:4, 26:4, 926:4, 27:4, 927:4,
		28:4, 928:4, 29:4, 929:4, 30:4, 930:4, 31:4, 931:4,
		86:1,		# asyn reset
		87:1,		# asyn preset
	    }
	}
    }
    array and/or3 {
	offset 9712
	inputs {
	    complement+ internal {
		400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
		410, 411, 412, 413, 414, 415, 416, 417, 418, 419,
		420, 421
	    }
	}
	outputs	{
	    external {
		79:1, 78:1,	# enab0, enab1
		43:4, 943:4, 42:4, 942:4, 41:4, 941:4, 40:4, 940:4,
		39:4, 939:4, 38:4, 938:4, 37:4, 937:4, 36:4, 936:4,
		80:1,		# asyn reset
		81:1,		# asyn preset
	    }
	}
    }
	# output macrocells
    fuses {
		5002=3080, 6002, 1002, 2002, 4002, 3002, 7002, 8002,
		5902, 6902, 1902, 2902, 4902, 3902, 7902, 8902,
		5003, 6003, 1003, 2003, 4003, 3003, 7003, 8003,
		5903, 6903, 1903, 2903, 4903, 3903, 7903, 8903,
		5004, 6004, 1004, 2004, 4004, 3004, 7004, 8004,
		5904, 6904, 1904, 2904, 4904, 3904, 7904, 8904,
		5005, 6005, 1005, 2005, 4005, 3005, 7005, 8005,
		5905, 6905, 1905, 2905, 4905, 3905, 7905, 8905,
		5006, 6006, 1006, 2006, 4006, 3006, 7006, 8006,
		5906, 6906, 1906, 2906, 4906, 3906, 7906, 8906,
		5007, 6007, 1007, 2007, 4007, 3007, 7007, 8007,
		5907, 6907, 1907, 2907, 4907, 3907, 7907, 8907,
		5008, 6008, 1008, 2008, 4008, 3008, 7008, 8008,
		5908, 6908, 1908, 2908, 4908, 3908, 7908, 8908,
		5009, 6009, 1009, 2009, 4009, 3009, 7009, 8009,
		5909, 6909, 1909, 2909, 4909, 3909, 7909, 8909,

		5021=6288, 6021, 1021, 2021, 4021, 3021, 7021, 8021,
		5921, 6921, 1921, 2921, 4921, 3921, 7921, 8921,
		5020, 6020, 1020, 2020, 4020, 3020, 7020, 8020,
		5920, 6920, 1920, 2920, 4920, 3920, 7920, 8920,
		5019, 6019, 1019, 2019, 4019, 3019, 7019, 8019,
		5919, 6919, 1919, 2919, 4919, 3919, 7919, 8919,
		5018, 6018, 1018, 2018, 4018, 3018, 7018, 8018,
		5918, 6918, 1918, 2918, 4918, 3918, 7918, 8918,
		5017, 6017, 1017, 2017, 4017, 3017, 7017, 8017,
		5917, 6917, 1917, 2917, 4917, 3917, 7917, 8917,
		5016, 6016, 1016, 2016, 4016, 3016, 7016, 8016,
		5916, 6916, 1916, 2916, 4916, 3916, 7916, 8916,
		5015, 6015, 1015, 2015, 4015, 3015, 7015, 8015,
		5915, 6915, 1915, 2915, 4915, 3915, 7915, 8915,
		5014, 6014, 1014, 2014, 4014, 3014, 7014, 8014,
		5914, 6914, 1914, 2914, 4914, 3914, 7914, 8914,

		5024=9496, 6024, 1024, 2024, 4024, 3024, 7024, 8024,
		5924, 6924, 1924, 2924, 4924, 3924, 7924, 8924,
		5025, 6025, 1025, 2025, 4025, 3025, 7025, 8025,
		5925, 6925, 1925, 2925, 4925, 3925, 7925, 8925,
		5026, 6026, 1026, 2026, 4026, 3026, 7026, 8026,
		5926, 6926, 1926, 2926, 4926, 3926, 7926, 8926,
		5027, 6027, 1027, 2027, 4027, 3027, 7027, 8027,
		5927, 6927, 1927, 2927, 4927, 3927, 7927, 8927,
		5028, 6028, 1028, 2028, 4028, 3028, 7028, 8028,
		5928, 6928, 1928, 2928, 4928, 3928, 7928, 8928,
		5029, 6029, 1029, 2029, 4029, 3029, 7029, 8029,
		5929, 6929, 1929, 2929, 4929, 3929, 7929, 8929,
		5030, 6030, 1030, 2030, 4030, 3030, 7030, 8030,
		5930, 6930, 1030, 2930, 4930, 3930, 7930, 8930,
		5031, 6031, 1031, 2031, 4031, 3031, 7031, 8031,
		5931, 6931, 1931, 2931, 4931, 3931, 7931, 8931,

		5043=12704, 6043, 1043, 2043, 4043, 3043, 7043, 8043,
		5943, 6943, 1943, 2943, 4943, 3943, 7943, 8943,
		5042, 6042, 1042, 2042, 4042, 3042, 7042, 8042,
		5942, 6942, 1942, 2942, 4942, 3942, 7942, 8942,
		5041, 6041, 1041, 2041, 4041, 3041, 7041, 8041,
		5941, 6941, 1941, 2941, 4941, 3941, 7941, 8941,
		5040, 6040, 1040, 2040, 4040, 3040, 7040, 8040,
		5940, 6940, 1940, 2940, 4940, 3940, 7940, 8940,
		5039, 6039, 1039, 2039, 4039, 3039, 7039, 8039,
		5939, 6939, 1939, 2939, 4939, 3939, 7939, 8939,
		5038, 6038, 1038, 2038, 4038, 3038, 7038, 8038,
		5938, 6938, 1938, 2938, 4938, 3938, 7938, 8938,
		5037, 6037, 1037, 2037, 4037, 3037, 7037, 8037,
		5937, 6937, 1937, 2937, 4937, 3937, 7937, 8937,
		5036, 6036, 1036, 2036, 4036, 3036, 7036, 8036,
		5936, 6936, 1936, 2936, 4936, 3936, 7936, 8936,

	# switching matrix a
		1100=0, 2100,  1101, 2101,  1102, 2102,  1103, 2103,
		1104, 2104,  1105, 2105,  1106, 2106,  1107, 2107,
		1108, 2108,  1109, 2109,  1110, 2110,  1111, 2111,
		1112, 2112,  1113, 2113,  1114, 2114,  1115, 2115,
		1116, 2116,  1117, 2117,  1118, 2118,  1119, 2119,
		1120, 2120,  1121, 2121,

		3100, 4100,  3101, 4101,  3102, 4102,  3103, 4103,
		3104, 4104,  3105, 4105,  3106, 4106,  3107, 4107,
		3108, 4108,  3109, 4109,  3110, 4110,  3111, 4111,
		3112, 4112,  3113, 4113,  3114, 4114,  3115, 4115,
		3116, 4116,  3117, 4117,  3118, 4118,  3119, 4119,
		3120, 4120,  3121, 4121,

	# switching matrix b
		1200=3208, 2200,  1201, 2201,  1202, 2202,  1203, 2203,
		1204, 2204,  1205, 2205,  1206, 2206,  1207, 2207,
		1208, 2208,  1209, 2209,  1210, 2210,  1211, 2211,
		1212, 2212,  1213, 2213,  1214, 2214,  1215, 2215,
		1216, 2216,  1217, 2217,  1218, 2218,  1219, 2219,
		1220, 2220,  1221, 2221,

		3200, 4200,  3201, 4201,  3202, 4202,  3203, 4203,
		3204, 4204,  3205, 4205,  3206, 4206,  3207, 4207,
		3208, 4208,  3209, 4209,  3210, 4210,  3211, 4211,
		3212, 4212,  3213, 4213,  3214, 4214,  3215, 4215,
		3216, 4216,  3217, 4217,  3218, 4218,  3219, 4219,
		3220, 4220,  3221, 4221,

	# switching matrix c
		1300=6416, 2300,  1301, 2301,  1302, 2302,  1303, 2303,
		1304, 2304,  1305, 2305,  1306, 2306,  1307, 2307,
		1308, 2308,  1309, 2309,  1310, 2310,  1311, 2311,
		1312, 2312,  1313, 2313,  1314, 2314,  1315, 2315,
		1316, 2316,  1317, 2317,  1318, 2318,  1319, 2319,
		1320, 2320,  1321, 2321,

		3300, 4300,  3301, 4301,  3302, 4302,  3303, 4303,
		3304, 4304,  3305, 4305,  3306, 4306,  3307, 4307,
		3308, 4308,  3309, 4309,  3310, 4310,  3311, 4311,
		3312, 4312,  3313, 4313,  3314, 4314,  3315, 4315,
		3316, 4316,  3317, 4317,  3318, 4318,  3319, 4319,
	 	3320, 4320,  3321, 4321,

	# switching matrix b
		1400=9624, 2400, 1401, 2401, 1402, 2402, 1403, 2403,
		1404, 2404, 1405, 2405, 1406, 2406, 1407, 2407,
		1408, 2408, 1409, 2409, 1410, 2410, 1411, 2411,
		1412, 2412, 1413, 2413, 1414, 2414, 1415, 2415,
		1416, 2416, 1417, 2417, 1418, 2418, 1419, 2419,
		1420, 2420, 1421, 2421,

		3400, 4400,  3401, 4401,  3402, 4402,  3403, 4403,
		3404, 4404,  3405, 4405,  3406, 4406,  3407, 4407,
		3408, 4408,  3409, 4409,  3410, 4410,  3411, 4411,
		3412, 4412,  3413, 4413,  3414, 4414,  3415, 4415,
		3416, 4416,  3417, 4417,  3418, 4418,  3419, 4419,
		3420, 4420,  3421, 4421

	}
}
