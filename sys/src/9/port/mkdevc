#!/bin/rc

awk -v 'objtype='$objtype '
BEGIN{
		if(ARGC < 2)
			exit
}

/^$/{
		next;
}
/^#/{
		next;
}
collect && /^[^	\t]/{
		collect = 0;
}
collect && section ~ "dev"{
		dev[ndev++] = $1;
		if($1 ~ "vga")
			devvga = 1;
}
collect && section ~ "ip"{
		ip[nip++] = $1;
}
collect && section ~ "link"{
		link[nlink++] = $1;
}
collect && section ~ "misc"{
		misc[nmisc++] = $1;
		if($1 ~ "^arch.*")
			arch[narch++] = $1;
		if($1 ~ "^sd.*")
			sdifc[nsdifc++] = $1;
		else if($1 ~ "^vga.*"){
			if(NF == 1)
				vgadev[nvgadev++] = $1;
			else for(i = 2; i <= NF; i++){
				if($i ~ "[+]cur")
					vgadev[nvgadev++] = $1;
				if($i ~ "[+=]cur")
					vgacur[nvgacur++] = $1;
			}
		}
		else if($1 ~ ".*\.root"){
			x = substr($1, 1, index($1, ".")-1);
			if(x ~ "(9660srv|dossrv|kfs|vdfs|bzfs)")
				x = "kfs";
			fs[nfs++] = x;
		}
}
collect && section ~ "port"{
		port[nport++] = $0;
}
$0 ~ /^[^ \t]/{
		if($0 ~ "(dev|ip|link|misc|port)"){
			section = $0;
			collect = 1;
		}
		next;
}

END{
		if(ARGC < 2)
			exit "usage"

		printf "#include \"u.h\"\n"
		printf "#include \"../port/lib.h\"\n"
		printf "#include \"mem.h\"\n"
		printf "#include \"dat.h\"\n"
		printf "#include \"fns.h\"\n"
		printf "#include \"io.h\"\n"
		printf "#include \"../port/error.h\"\n\n"

		for(i = 0; i < ndev; i++)
			printf "extern Dev %sdevtab;\n", dev[i];
		printf "Dev* devtab[]={\n"
		for(i = 0; i < ndev; i++)
			printf "\t&%sdevtab,\n", dev[i];
		printf "\tnil,\n};\n\n";


		for(i = 0; i < nfs; i++){
			printf "extern uchar %scode[];\n", fs[i];
			printf "extern ulong %slen;\n", fs[i];
		}
		for(i = 0; i < nlink; i++)
			printf "extern void %slink(void);\n", link[i];

		printf "void links(void){\n";
		for(i = 0; i < nfs; i++)
			printf "\taddrootfile(\"%s\", %scode, %slen);\n", fs[i], fs[i], fs[i];
		for(i = 0; i < nlink; i++)
			printf "\t%slink();\n", link[i];
		printf "}\n\n";

		if(narch || objtype ~ "386"){
			for(i = 0; i < narch; i++)
				printf "extern PCArch %s;\n", arch[i];
			printf "PCArch* knownarch[] = {\n";
			for(i = 0; i < narch; i++)
				printf "\t&%s,\n", arch[i];
			printf "\tnil,\n};\n\n";
		}

		if(nsdifc){
			printf "#include \"../port/sd.h\"\n";
			for(i = 0; i < nsdifc; i++)
				printf "extern SDifc %sifc;\n", sdifc[i];
			printf "SDifc* sdifc[] = {\n";
		  	for(i = 0; i < nsdifc; i++)
				printf "\t&%sifc,\n", sdifc[i];
		  	printf "\tnil,\n};\n\n";
		}

		if(devvga){
			printf "#define	Image	IMAGE\n";
			printf "#include <draw.h>\n";
			printf "#include <memdraw.h>\n";
			printf "#include <cursor.h>\n"
			printf "#include \"screen.h\"\n"

			for(i = 0; i < nvgadev; i++)
				printf "extern VGAdev %sdev;\n", vgadev[i];
		  	printf "VGAdev* vgadev[] = {\n";
		  	for(i = 0; i < nvgadev; i++)
				printf "\t&%sdev,\n", vgadev[i];
		  	printf "\tnil,\n};\n\n";

			for(i = 0; i < nvgacur; i++)
				printf "extern VGAcur %scur;\n", vgacur[i];
		  	printf "VGAcur* vgacur[] = {\n";
		  	for(i = 0; i < nvgacur; i++)
				printf "\t&%scur,\n", vgacur[i];
		  	printf "\tnil,\n};\n\n";
		}
	
		if(nip){
			printf "#include \"../ip/ip.h\"\n";
			for(i = 0; i < nip; i++)
				printf "extern void %sinit(Fs*);\n", ip[i];
			printf "void (*ipprotoinit[])(Fs*) = {\n";
			for(i = 0; i < nip; i++)
				printf "\t%sinit,\n", ip[i];
			printf "\tnil,\n};\n\n";
		}

		for(i = 0; i < nport; i++)
			printf "%s\n", port[i];

		printf "char* conffile = \"%s\";\n", ARGV[1];
		printf "ulong kerndate = KERNDATE;\n";

		exit
}' $*
