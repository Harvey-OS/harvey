%%%% MFT commands for the Computer Modern base
%%% } ( ) ]] {{ }} ! ^ %%%% tokens that need no special formatting
%%% step upto downto %%%% boldface binary operators
%%% addto fill unfill draw undraw %%%% boldface unary operators
%%% addto filldraw unfilldraw drawdot undrawdot erase pickup
%%% addto exitunless stop incr decr proofrulethickness screenrule
%%% addto define_pixels define_whole_pixels define_whole_vertical_pixels
%%% addto define_blacker_pixels define_whole_blacker_pixels
%%% addto define_corrected_pixels lowres_fix proofoffset penstroke
%%% addto beginchar beginarithchar italcorr font_size font_slant
%%% addto font_normal_space font_normal_stretch font_normal_shrink font_quad
%%% addto font_x_height font_extra_space font_identifier font_coding_scheme
%%% addto cmchar iff generate adjust_fit math_fit labels penlabels
%%% addto stroke circ_stroke padded
%%% enddef endchar %%%% boldface closing
%%% true relax mode_setup font_setup %%%% boldface nullary operators
%%% true clearit shipit cullit openit showit clearxy clearpen
%%% true nodisplay notransforms screenchars screenstrokes imagerules
%%% .. ... .... -- --- %%%% path operators made of dots and dashes
%%% length flex abs dir %%%% unary operators to be in roman type
%%% length unitvector inverse ceiling hround vround Vround counterclockwise
%%% length tensepath byte reflectedabout rotatedaround magstep max min
%%% and mod dotprod intersectionpoint softjoin %%%% binary operators to be roman
%%% ++ ** %%%% binary operators made of two special characters
%%% penoffset goodval direction directionpoint %%%% operators that take "of"
%%% pausing tolerance pixels_per_inch blacker o_correction %%%% internals
%%% pausing screen_rows screen_cols currentwindow displaying
%%% pausing pen_top pen_bot pen_lft pen_rt shrink_fit rt lft top bot
%%% = <= >= <> %%%% conversions for the SAIL character set only
%%% good crisp fine tiny rule light_rule cal light_cal med_cal heavy_cal
%%% good term fudged mfudged sloped_serif tilted med_tilted
%%% pausing slant fudge math_spread superness superpull beak_darkness ligs
%%% input generate
%% \outer\def^^L{\par\vfill\eject} % obeypages
%%
%% % nine-point type:
%% \catcode`@=11 % borrow the private macros of PLAIN (with care)
%% \def\ninebig#1{{\hbox{$\textfont0=\tenrm\textfont2=\tensy
%%   \left#1\vbox to7.25pt{}\right.\n@space$}}}
%% \catcode`@=12 % now @ is a nonletter again
%% \font\ninerm=cmr9 \font\sixrm=cmr6
%% \font\ninei=cmmi9 \font\sixi=cmmi6
%% \skewchar\ninei='177 \skewchar\sixi='177
%% \font\ninesy=cmsy9 \font\sixsy=cmsy6
%% \skewchar\ninesy='60 \skewchar\sixsy='60
%% \font\nineit=cmti9
%% \font\ninesl=cmsl9
%% \font\ninebf=cmbx9 \font\sixbf=cmbx6
%% \font\ninett=cmtt9 \hyphenchar\ninett=-1
%% \font\ninetex=cmtex9 \hyphenchar\ninetex=-1
%% \def\rm{\fam0\ninerm}
%% \textfont0=\ninerm \scriptfont0=\sixrm \scriptscriptfont0=\fiverm
%% \textfont1=\ninei \scriptfont1=\sixi \scriptscriptfont1=\fivei
%% \textfont2=\ninesy \scriptfont2=\sixsy \scriptscriptfont2=\fivesy
%% \textfont3=\tenex \scriptfont3=\tenex \scriptscriptfont3=\tenex
%% \def\it{\fam\itfam\nineit}
%% \textfont\itfam=\nineit
%% \def\sl{\fam\slfam\ninesl}
%% \textfont\slfam=\ninesl
%% \def\bf{\fam\bffam
%%  \def\_{\kern.04em\vbox{\hrule width.3em height .6pt}\kern.08em}%
%%  \ninebf}
%% \textfont\bffam=\ninebf \scriptfont\bffam=\sixbf
%%  \scriptscriptfont\bffam=\fivebf
%% \def\tt{\fam\ttfam\ninett}
%% \textfont\ttfam=\ninett
%% \def\finstring"#1"{\ninetex"#1"\egroup}
%% \baselineskip=11pt
%% \def\MF{{\manual hijk}\-{\manual lmnj}}
%% \let\big=\ninebig
%% \setbox\strutbox=\hbox{\vrule height8pt depth3pt width0pt}
%% \rm
%% \setbox\shorthyf=\hbox{-\kern-.05em}
%% \hsize=29pc % this is the size of pages in the Computer Modern book
%% \vsize=44pc % likewise
%%
%%%% \mag=\magstep1 %%%% for magnified proofs
